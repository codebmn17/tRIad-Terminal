name: Compat CI (Termux-safe pins)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Install Termux-compatible requirements
        run: python -m pip install -r requirements-termux.txt
      - name: Import and app detection check
        run: |
          python - <<'PY'
          import sys, importlib
          import fastapi, pydantic, starlette, uvicorn
          print("python:", sys.version.split()[0])
          print("fastapi:", fastapi.__version__)
          print("pydantic:", pydantic.__version__)
          print("starlette:", starlette.__version__)
          print("uvicorn:", uvicorn.__version__)
          candidates = [("api.app", "app"), ("app", "app"), ("api.main", "app")]
          found = False
          for mod, var in candidates:
              try:
                  m = importlib.import_module(mod)
                  getattr(m, var)
                  print(f"Detected FastAPI app at {mod}:{var}")
                  found = True
              except Exception as e:
                  print(f"Tried {mod}:{var} -> {e.__class__.__name__}: {e}")
          if not found:
              raise SystemExit("No FastAPI app found among candidates (api.app:app, app:app, api.main:app)")
          PY
