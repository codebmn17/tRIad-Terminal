name: Compat CI (Termux)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  termux-compat:
    runs-on: ubuntu-latest
    continue-on-error: true  # Non-blocking - informational only
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          
      - name: Install Termux-safe dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements-termux.txt
          
      - name: Test FastAPI app import (Termux-safe)
        run: |
          export PYTHONPATH=$PWD
          python -c "
          import sys
          import importlib
          
          # Test import strategy similar to run_termux.sh
          candidates = [('api.main', 'app'), ('api.app', 'app'), ('app', 'app')]
          
          for module_name, app_name in candidates:
              try:
                  print(f'üîç Trying to import {module_name}:{app_name}...')
                  module = importlib.import_module(module_name)
                  
                  if hasattr(module, app_name):
                      app = getattr(module, app_name)
                      print(f'‚úÖ Successfully imported {module_name}:{app_name}')
                      print(f'   App title: {getattr(app, \"title\", \"N/A\")}')
                      print(f'   App version: {getattr(app, \"version\", \"N/A\")}')
                      
                      # Count routes if possible
                      try:
                          route_count = len(getattr(app, 'routes', []))
                          print(f'   Routes registered: {route_count}')
                      except:
                          pass
                          
                      print('‚úÖ Termux compatibility test PASSED')
                      sys.exit(0)
                  else:
                      print(f'‚ö†Ô∏è  Module {module_name} found but no {app_name} attribute')
                      
              except Exception as e:
                  print(f'‚ö†Ô∏è  Failed to import {module_name}: {e}')
                  continue
          
          print('‚ùå No valid FastAPI app found in any candidate location')
          print('‚ÑπÔ∏è  This is informational only - not blocking the build')
          # Don't exit with error code since this is non-blocking
          "
          
      - name: Validate Termux-safe dependencies only
        run: |
          export PYTHONPATH=$PWD
          python -c "
          # Test that core Termux-safe dependencies work
          
          print('üß™ Testing Termux-safe dependencies...')
          
          try:
              import fastapi
              print(f'‚úÖ FastAPI {fastapi.__version__}')
          except ImportError as e:
              print(f'‚ùå FastAPI: {e}')
              
          try:
              import pydantic
              print(f'‚úÖ Pydantic {pydantic.VERSION}')
          except ImportError as e:
              print(f'‚ùå Pydantic: {e}')
              
          try:
              import uvicorn
              print(f'‚úÖ Uvicorn {uvicorn.__version__}')
          except ImportError as e:
              print(f'‚ùå Uvicorn: {e}')
              
          try:
              import starlette
              print(f'‚úÖ Starlette {starlette.__version__}')
          except ImportError as e:
              print(f'‚ùå Starlette: {e}')
          
          # Test basic FastAPI app creation
          try:
              from fastapi import FastAPI
              test_app = FastAPI(title='Test App')
              print('‚úÖ Basic FastAPI app creation works')
          except Exception as e:
              print(f'‚ùå FastAPI app creation failed: {e}')
          
          print('‚úÖ Termux-safe dependencies validation completed')
          "